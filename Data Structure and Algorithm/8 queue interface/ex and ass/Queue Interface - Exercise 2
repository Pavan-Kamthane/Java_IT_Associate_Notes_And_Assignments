import java.util.Deque;
import java.util.ArrayDeque;

class Tester {
    
    public static Deque<Integer> changeSmallest(Deque<Integer> inputStack) {
		Deque<Integer> updatedStack = new ArrayDeque<Integer>();
    int min = Integer.MAX_VALUE;
    for (Integer value : inputStack) {
        if (value < min) {
            min = value;
        }
    }
    Deque<Integer> tempStack = new ArrayDeque<Integer>();
    while (!inputStack.isEmpty()) {
        int current = inputStack.pop();
        if (current != min) {
            tempStack.push(current);
        } else {
            updatedStack.push(current);
        }
    }
    while (!tempStack.isEmpty()) {
        updatedStack.push(tempStack.pop());
    }
    return updatedStack;
	}

	public static void main(String[] args) {
		
		Deque<Integer> inputStack = new ArrayDeque<Integer>();
		inputStack.push(10);
		inputStack.push(8);
		inputStack.push(5);
		inputStack.push(12);
		inputStack.push(5);
	
		Deque<Integer> updatedStack = changeSmallest(inputStack);
		
		System.out.println("Stack After Modification:");
		for (Integer value : updatedStack)
			System.out.println(value);
	}
}